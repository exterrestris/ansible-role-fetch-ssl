---
- name: ensure user exists
  ansible.builtin.user:
    name: "{{ fetch_ssl_script_owner }}"
    groups:
      - "{{ fetch_ssl_script_group }}"
    append: yes
  register: _fetch_ssl_script_owner_info

- name: create script
  ansible.builtin.template:
    src: ../templates/install-ssh-cert.sh.j2
    dest: "{{ fetch_ssl_script_dir }}/{{ fetch_ssl_script_name }}"
    owner: "{{ fetch_ssl_script_owner }}"
    group: "{{ fetch_ssl_script_group }}"
    mode: "{{ fetch_ssl_script_mode }}"

- name: configure cron
  ansible.builtin.cron:
    name: "{{ fetch_ssl_cron_name }}"
    special_time: "{{ fetch_ssl_cron_frequency }}"
    user: "{{ fetch_ssl_script_owner }}"
    job: "{{ fetch_ssl_script_dir | regex_replace('\\/$', '') }}/{{ fetch_ssl_script_name }}"
    cron_file: "{{ fetch_ssl_cron_file }}"

- name: generate SSH key
  ansible.builtin.user:
    name: "{{ fetch_ssl_script_owner }}"
    generate_ssh_key: yes
    ssh_key_type: "{{ fetch_ssl_generated_ssh_key_type }}"
    ssh_key_bits: "{{ fetch_ssl_generated_ssh_key_bits }}"
    ssh_key_file: ".ssh/{{ fetch_ssl_generated_ssh_key }}"
  register: "user_info"
  when: fetch_ssl_generate_ssh_key

- name: install SSH key on remote hosts
  block:
    - ansible.posix.authorized_key:
        user: "{{ fetch_ssl_ssh_user }}"
        state: present
        key: "{{ _fetch_ssl_ssh_key }}"
      delegate_to: "{{ fetch_ssl_ssh_host }}"
      vars:
        ansible_python_interpreter: "{{ fetch_ssl_ssh_host_python }}"
    - ansible.posix.authorized_key:
        user: "{{ item.1.user }}"
        state: present
        key: "{{ _fetch_ssl_ssh_key }}"
      delegate_to: "{{ item.1.host }}"
      loop: "{{ fetch_ssl_certs | subelements('send_to', skip_missing=True) }}"
  when: fetch_ssl_ssh_key_install_remote
  vars:
    _fetch_ssl_ssh_key: "{{ user_info.ssh_public_key if fetch_ssl_generate_ssh_key else lookup('file', fetch_ssl_ssh_key) }}"

- name: add remote hosts to known_hosts
  block:
    - ansible.builtin.known_hosts:
        name: "{{ fetch_ssl_ssh_host }}"
        key: "{{ lookup('pipe', 'ssh-keyscan -t' + fetch_ssh_ssh_known_hosts_remote_key_type + ' ' + fetch_ssl_ssh_host ) }}"
        path: "{{ _fetch_ssl_script_owner_info.home }}/.ssh/known_hosts"
        state: present
    - ansible.builtin.known_hosts:
        name: "{{ item.1.host }}"
        key: "{{ lookup('pipe', 'ssh-keyscan -t' + fetch_ssh_ssh_known_hosts_remote_key_type + ' ' + item.1.host ) }}"
        path: "{{ _fetch_ssl_script_owner_info.home }}/.ssh/known_hosts"
        state: present
      loop: "{{ fetch_ssl_certs | subelements('send_to', skip_missing=True) }}"
  when: fetch_ssl_ssh_add_remote_to_known_hosts

- name: run script
  ansible.builtin.command:
    cmd: "{{ fetch_ssl_script_dir }}/{{ fetch_ssl_script_name }}"
  become: yes
  become_user: "{{ fetch_ssl_script_owner }}"
  when: fetch_ssl_run_now
